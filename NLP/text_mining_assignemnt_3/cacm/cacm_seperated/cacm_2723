multiprocessing compactifying garbage collection.walgorithms for a multiprocessing compactifyinggarbage collector are presented and discussed.  the simple case of two processors, one performing lisp-likelist operations and the other performing garbage collection continuously, is thoroughly examined.the necessary capabilities of each processor are defined, as well as interprocessor communicationand interlocks. complete procedures for garbage collection and for standard list processing primitivesare presented and thoroughly explained.  particular attention is given to the problems of marking and relocatinglist cells while another processor may be operating on them.  the primary aim throughout is toallow the list processor to run unimpeded while the other processor reclaims list storage.  the morecomplex cases involving several list processors and one or more garbage collection processors are also briefly discussed.cacm september, steele, g. l. jr..kgarbage collection, storage reclamation, reclaimer,storage allocation, multiprocessing, synchronization, semaphores, parallel processing, compactification, relocation,lisp, list processing, free storage, pointers, data structures, gc processor.c. . . . .ca jb january ,   : pm