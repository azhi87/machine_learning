a correspondence between algol  and church's lambda-notation: part i*.wthis paper describes how some of the semanticsof algol  can be formalized by establishing a correspondence between expressions of algol  and expressionsin a modified form of church's l-notation.  first a model for computer languages and compute behavioris described, based on the notions of functional application and functional abstraction, but also havinganalogues for imperative language features.  then this model is used as an "abstract object language"into which algol  is mapped.  many of algol 's features emerge as particular arrangements ofa small number of structural rules, suggesting new classifications and generalizations.  the correspondenceis first described informally, mainly by illustrations.  the second part of the paper gives a formal description,i.e. an "abstract compiler" into the "abstract objct language."  this is itself presented in a "purelyfunctional" notation, that is one using only application and abstraction.cacm february, landin, p. j.ca jb march ,   : pm