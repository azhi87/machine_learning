abstract data types and software validation.wa data abstraction can be naturally specifiedusing algebraic axioms.  the virtue of these axioms is that they permit a representation-independentformal specification of a data type.  an example is given which shows how to employ algebraic axioms atsuccessive levels of implementation.  the  major thrust of the paper is twofold.  first, it is shown howthe use of algebraic axiomatizations can simplify the process of proving the correctness of an implementationof an abstract data type.  second, semi-automatic tools are described which can be used both to automatesuch proofs of correctness and to derive an immediate implementation from the axioms.  this implementationallows for limited testing of programs at design time, before a conventional implementation is accomplished.cacm december, guttag, j.v.horowitz, e.musser, d.r..kabstract data type, correctness proof,data type, data structure, specification .c. .ca dh january ,   : pm   