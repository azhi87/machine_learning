gedanken-a simple typeless language based on theprinciple of completeness and the reference concept.wgedanken is an experimental programming language with the following characteristics.  () any value which is permitted in some context of the language is permissible in any other meaningful context.  in particular,functions and labels are permissible  results of functions and valuesof variables.  () assignment and indirect addressing are formalizedby introducing values, called reference, which in turn possessother values.  the assignment operation always affects the relationbetween some reference and its value,  () all compound datastructures are treated as functions.  () type declarations arenot permitted.  the functional approach to data structures and theuse of references insure that any process which accepts some datastructure will accept any logically equivalent structure, regardlessof its internal representation.  more generally, any data structuremay be implicit; i.e. it may be specified by giving an arbitraryalgorithm for computing or accessing its components.  the existence of label variables permits the construction of coroutines,quasi-parallel processes, and other unorthodox control mechanisms.a variety of programming examples illustrates the generality of the language.limitations and possible extensions are discussed briefly.cacm may, reynolds, j. c..kprogramming language, data structure, reference, assignment, coroutine,quasi-parallel process, typeless language, applicative language,lambda calculus, list processing, nondeterministic algorithm.c. . . .ca jb february ,   : pm