abstraction and verification in alphard: definingand specifying iteration and generators.wthe alphard "form" provides the programmer witha great deal of control over the implementation of abstract data types.  in this paper the abstraction techniquesare extended from simple data representation and function definition to the iteration statement, themost important poin t of interaction between data and the control structure of the language itself.  ameans of specializing alphard's loops to operate on abstract entities without explicit dependence on therepresentation of those entities is in troduced.  specification and verification techniques that allowthe properties of the generators for such iterations to be expressed in the form of proof rules are developed. results are obtained that for common special cases of these loops are essentially identical to thecorresponding constructs in other languages.  a means of showing that a generator will terminate is also provided.cacm august, shaw, m.wulf, w. a..kabstraction and representation, abstract data types,assertions, control specialization, correctness, generators,invariants, iteration statements, modulardecomposition, program specifications, programming languages, programming methodology, proofs of correctness, types, verification.c. .ca jb december ,   : am