one way of estimating frequencies of jumps in a program.wfor the segmentation of a program it is usefulto have a reasonable estimation of the values of s(ij), where s(ij) is the mean value of the numberof jumps from the i-th instruction on to the j-th instruction in the run time.  in the cases where thes(ij) are estimated directly, the structure of the whole program must be generally taken into account;therefore it is very difficult for the programmer and/or the translator to obtain a good estimation ofthe s(ij).  it is easier to estimate not s(ij) but the quantities p(ij)=s(ij)*c(i)/sum[s(ij), j=,n], wherec(i) is an arbitrary positive constant for each i.  although the p(ij) are, for each i, proportional tos(ij), the estimation of p(ij) is easier, because we must estimate only the "probabilities" of eventswhere instruction i is executed after instruction i(i).  this estimation can often be done without consideringthe structure of the whole program.  in the first part of the paper, using the theory of themarkov chains, an algorithm for the computation of the s(ij) from the p(ij) is found, and some waysof obtaining estimates of the p(ij) are given.  in the second part a variant of this algorithm is derived,avoiding the necessity of computation involving large matrices.cacm july, kral, j..kobject program reduction, supervisor calls decreasing,jump frequencies estimation, control transfers estimation, optimal program segmentation, markov chainprogram correspondence, program graph, one-entry subgraph, locally estimated jump frequencies, supervisoroverhead decreasing, program segmentation algorithm, jump frequencies, program segmentation problem.c. . . .ca jb february ,   : pm