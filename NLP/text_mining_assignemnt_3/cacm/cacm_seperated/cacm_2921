regular right part grammars and their parsers.wthis paper in troduces an alternative to context-freegrammars called regular right part (rrp) grammars, which resemble pascal syntax diagrams.  formally,rrp grammars have production right parts, which are nondeterministic finite state machines (fsms),and, as a special case, regular expressions, since these can be converted to fsms.  rrp grammarsdescribe the syntax of programming languages more concisely and more understandably than is possible withcf grammars.  also in troduced is a class of parsers, rrp lr(m, k) parsers, which includes the cf lr(k) parsersand provides the same advantages.  informally, an rrp lr(m, k) parser can determine the right end ofeach handle by considering at most k symbols to the right of the handle and the left end, after theright end has been found, by considering at most m symbols to the left of the handle.  a mechanism fordetermining the left end is required because there is no bound on the length of the handle.cacm october, lalonde, w. r..kfinite state machines (automata), regular expressions,syntax diagrams,lr(k) grammars, parser construction, parsing, programming languages, language generation,formal definition, compilers, translators, scanners.c. . .ca jb december ,   : am