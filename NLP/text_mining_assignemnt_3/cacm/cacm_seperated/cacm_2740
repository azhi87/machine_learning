a large semaphore based operating system.wthe paper describes the internal structure ofa large operating system as a set of cooperating sequential processes.  the processes synchronize bymeans of semaphores and extended semaphores (queue semaphores).  the number of parallel processes is carefullyjustified, and the various semaphore constructions are explained.  the system is proved to be free of "deadlyembrace" (deadlock).  the design principle is an alternative to dijkstra's hierarchical structuringof operating systems.  the project management and the performance are discussed, too.  the operatingsystem is the first large one using the rc  multiprogramming system.cacm july, lauesen, s..kcooperating processes, operating system, semaphores,semaphore applications, queue semaphores, deadlock, deadly embrace, hierarchical structuring, multiprogramming,operating system structure, asynchronous structuring, buffering, parallel processes, synchronizingprimitives, reentrant code, rc , project management, time schedule, debugging, project planning,project scheduling, reliability, program proving, coroutines, correctness, program maintenance, software paging.c. . . . . .ca jb january ,   : am