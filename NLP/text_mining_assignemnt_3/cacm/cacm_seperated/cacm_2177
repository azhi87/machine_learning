an algorithm for the blocks and cutnodes of a graph.wan efficient method is presented for findingblocks and cutnodes of an arbitrary undirected graph.  the graph may be represented either (i) as anordered list of edges or (ii) as a packed adjacency matrix.  if w denotes the word length of the machineemployed, the storage (in machine words) required for a graph with n nodes and m edges increases essentiallyas (m+n) in case (i), or (n^)/win case (ii).  a spanning tree with labeled edges is grown,two edges finally bearing different labels if and only if they belong to different blocks.  for both representationsthe time required to analyze a graph on n nodes increases as n^g where g depends on the typeof graph,  <= g <= , and both bounds are attained.  values of g are derived for each of several suitablefamilies of test graphs, generated by an extension of the web grammar approach.  the algorithm is comparedin detail with that proposed by read for which  <= g <= .cacm july, paton, k..kalgorithm, block, block-cutpoint-tree, cutnode, fundamentalcycle set, graph, lobe, lobe decomposition graph, separable, spanning tree, web grammar.c.ca jb february ,   : am