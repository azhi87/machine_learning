shifting garbage collection overhead to compile time.wthis paper discusses techniques which enable automaticstorage reclamation overhead to be partially shifted to compile time.  the paper assumes a transactionoriented collection scheme, as proposed by deutsch and bobrow, the necessary features of which aresummarized.  implementing the described optimizations requires global flow analysis to be performed on thesource program.  it is shown that at compile time certain program actions that affect the reference countsof cells can be deduced.  this information is used to find actions that cancel when the code is executedand those that can be grouped to achieve improved efficiency.cacm july, barth, j. m..kgarbage collection, global flow analysis, list processing,optimization, reference counts, storage management.c. . . .ca jb december ,   : am