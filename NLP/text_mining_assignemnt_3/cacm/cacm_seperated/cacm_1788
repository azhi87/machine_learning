toward a general processor for programming languages.wmany efforts have been made to develop a betterway of implementing a higher level programming language than by the construction of a whole new compiler,but so far none has proved generally satisfactory.  in this paper, it is contended that a programminglanguage is best described functionally as a body of macro instructions, and that the macro call constitutesa canonical form in terms of which a programming notation may be described.  a supporting discussion of thelogical and his torical role of the macro instruction is presented.  also discussed are the conflict betweenmachine independence and object program efficiency, and the question of where the greatest difficultieslie in compiler construction.cacm january, halpern, m. j..kprogramming language translator, programming languageprocessor, general translator, general processor, macro instruction processor; meta processor, meta languagetranslator, meta language processor, compiler-compiler, writing system, translator writing system.c. . . .ca jb february ,   : pm