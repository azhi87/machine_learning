automatic data structure selection: an example and overview.wthe use of several levels of abstraction hasproved to be very helpful in constructing and maintaining programs.  when programs are designed with abstractdata types such as sets and lists, programmer time can be saved by automating the process of fillingin low-level implementation details.  in the past, programming systems have provided only a single generalpurpose implementation for an abstract type.  thus the programs produced using abstract types werethen inefficient in space or time.  in this paper a system for automatically choosing efficient implementationsfor abstract types from a library of implementations is discussed.  this process is discussed in detail foran example program.  general issues in data structure selection are also reviewed. cacm may, low, j.r..kabstract data types, automatic programming, datastructures, optimizing compilers, sets, lists.c. . .ca dh february ,   : pm