global optimization by suppression of partial redundancies.wthe elimination of redundant computations and the moving of invariantcomputations out of loops are often done separately, with invariants moved outward loop by loop.  we propose to do both at once andto move each expression directly to the entrance of the outermostloop in which it is invariant.  this is done by solving a moregeneral problem, i.e. the elimination of computations performedtwice on a given execution path.  such computations are termed partiallyredundant.  moreover, the algorithm does not require any graphicalinformation or restrictions on the shape of the program graph.testing this algorithm has shown that its execution cost is nearlylinear with the size of the program, and that it leadsto a smaller optimizer that requires less execution time.cacm february, morel, e.renvoise, c..koptimizer, optimization, compiler, compilation,redundancy elimination, invariant computation elimination, partial redundancy,data flow analysis, boolean systems.c. . .ca dh april ,   : pm