requirements for advanced programming systems for list processing.wlist processing systems should be designed tofacilitate production of large programs to manipulate large complex symbolic data stores.  this paper presentsan overview of a number of system features which the author feels are important to improve the productivityof programmers working in such domains.  a system view it taken, rather than focusing just on languagefeatures, since algorithms must be not only coded in a language form, but debugged, modified, madeefficient, and run on data.  because of this general framework,the requirements specified are applicableto the design of advanced programming systems for a wide range of applications.  three aspects of programmingsystems are highlighted: good interactive facilities, programmable control structures, and sophisticateddata communication mechanisms.  interactive features are described to facilitate program composition,entry, testing, debugging, editing, optimization, and packaging.  implementation of a generalized environmentstructure model specified would allow programming of various control regimes including multiprocesses,coroutines and backtracking.  alternative methods of procedure invocation required include invocationby pattern and by monitoring condition.  the  need for extended data forms, storage management, and extensibilityare stressed, as is the duality of data retrieval and function evaluation.  syntax directedinput and output of data would facilitate use of complex data stores.cacm july, bobrow, d. g..klist processing, programming languages, design ofprogramming languages, interactive systems, control structures, data structures, programming primitives,semantics, advanced programming systems.c. . . . . . .ca jb january ,   : pm