an overview of the ispl computer system design.wthis paper explores the advantages of the concurrentdesign of the language, operating system, and machine (via microcode) to create an interactive programminglaboratory.  it describes the synergistic effect that the freedom to move and alter features fromone of these domains to another has had on the design of this system (which has not been implemented). this freedom simplified both incremental compilation and the system's addressing structure, and centralized thecommunication mechanisms enabling the construction of hierarchical subsystems.  it also suggested an importantnew concept for operating systems: separation of the scheduling from the maintenance functions in resourceallocation. this separation enables incorporation of new scheduling algorithms (decision of what to do) withoutendangering the system integration (correctly performing the scheduling decisions).cacm february, balzer, r. m..kconcurrent design, operating-system, scheduling,interprogram communication, incremental compilation, virtual addressing, debugging, hierarchical subsystems.c. . . . . . . .ca jb january ,   : pm